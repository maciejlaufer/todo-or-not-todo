// Code generated by sqlc. DO NOT EDIT.
// source: users_lists.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const addUserToList = `-- name: AddUserToList :one
INSERT INTO users_lists (
	user_id,
	list_id
) VALUES (
	$1, $2
) RETURNING user_id, list_id, created_at
`

type AddUserToListParams struct {
	UserID uuid.UUID `json:"user_id"`
	ListID uuid.UUID `json:"list_id"`
}

func (q *Queries) AddUserToList(ctx context.Context, arg AddUserToListParams) (UsersList, error) {
	row := q.queryRow(ctx, q.addUserToListStmt, addUserToList, arg.UserID, arg.ListID)
	var i UsersList
	err := row.Scan(&i.UserID, &i.ListID, &i.CreatedAt)
	return i, err
}

const deleteUserFromList = `-- name: DeleteUserFromList :exec
DELETE FROM users_lists
WHERE user_id = $1 AND list_id = $2
`

type DeleteUserFromListParams struct {
	UserID uuid.UUID `json:"user_id"`
	ListID uuid.UUID `json:"list_id"`
}

func (q *Queries) DeleteUserFromList(ctx context.Context, arg DeleteUserFromListParams) error {
	_, err := q.exec(ctx, q.deleteUserFromListStmt, deleteUserFromList, arg.UserID, arg.ListID)
	return err
}
